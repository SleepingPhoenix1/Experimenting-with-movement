[gd_resource type="ShaderMaterial" load_steps=8 format=2]

[ext_resource path="res://sprites/character_Sprite.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeColorUniform" id=11]
uniform_name = "ColorUniform2"

[sub_resource type="VisualShaderNodeTexture" id=6]
output_port_for_preview = 0
texture = ExtResource( 1 )
texture_type = 1

[sub_resource type="VisualShaderNodeInput" id=7]
input_name = "uv"

[sub_resource type="VisualShaderNodeIf" id=8]

[sub_resource type="VisualShaderNodeColorUniform" id=10]
uniform_name = "ColorUniform"

[sub_resource type="VisualShader" id=9]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_6 : hint_albedo;
uniform vec4 ColorUniform : hint_color;
uniform vec4 ColorUniform2 : hint_color;



void vertex() {
// Output:0

}

void fragment() {
// Input:7
	vec3 n_out7p0 = vec3(UV, 0.0);

// Texture:6
	vec4 tex_frg_6_read = texture(tex_frg_6, n_out7p0.xy);
	vec3 n_out6p0 = tex_frg_6_read.rgb;
	float n_out6p1 = tex_frg_6_read.a;

// ColorUniform:9
	vec3 n_out9p0 = ColorUniform.rgb;
	float n_out9p1 = ColorUniform.a;

// ColorUniform:10
	vec3 n_out10p0 = ColorUniform2.rgb;
	float n_out10p1 = ColorUniform2.a;

// If:8
	float n_in8p2 = 0.00001;
	vec3 n_out8p0;
	if(abs(dot(n_out6p0, vec3(0.333333, 0.333333, 0.333333)) - dot(n_out9p0, vec3(0.333333, 0.333333, 0.333333))) < n_in8p2)
	{
		n_out8p0 = n_out10p0;
	}
	else if(dot(n_out6p0, vec3(0.333333, 0.333333, 0.333333)) < dot(n_out9p0, vec3(0.333333, 0.333333, 0.333333)))
	{
		n_out8p0 = n_out6p0;
	}
	else
	{
		n_out8p0 = n_out6p0;
	}

// Output:0
	COLOR.rgb = n_out8p0;
	COLOR.a = n_out6p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 0, 109.5 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 940, 220 )
nodes/fragment/6/node = SubResource( 6 )
nodes/fragment/6/position = Vector2( 280, 300 )
nodes/fragment/7/node = SubResource( 7 )
nodes/fragment/7/position = Vector2( 60, 340 )
nodes/fragment/8/node = SubResource( 8 )
nodes/fragment/8/position = Vector2( 720, 400 )
nodes/fragment/9/node = SubResource( 10 )
nodes/fragment/9/position = Vector2( 520, 260 )
nodes/fragment/10/node = SubResource( 11 )
nodes/fragment/10/position = Vector2( 500, 600 )
nodes/fragment/connections = PoolIntArray( 6, 1, 0, 1, 6, 0, 8, 0, 8, 0, 0, 0, 6, 0, 8, 4, 6, 0, 8, 5, 9, 0, 8, 1, 10, 0, 8, 3, 7, 0, 6, 0 )

[resource]
shader = SubResource( 9 )
shader_param/ColorUniform = Color( 1, 1, 1, 1 )
shader_param/ColorUniform2 = Color( 0, 0, 0, 1 )
