[gd_scene load_steps=4 format=2]

[ext_resource path="res://invert.tres" type="Material" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item; 
render_mode blend_mix, unshaded;

uniform vec4 color0: hint_color;
uniform vec4 color1: hint_color;
uniform vec4 color2: hint_color;
uniform vec4 color3: hint_color;
uniform vec4 color4: hint_color;
uniform vec4 color5: hint_color;
uniform vec4 color6: hint_color;
uniform vec4 color7: hint_color;
uniform vec4 color8: hint_color;


void fragment() {
// Input:3
	vec4 colors[] = {color0,color1,color2,color3,color4,color5,color6,color7,color8};

	vec3 scrn_uv = vec3(UV, 0.0);

// Texture:4
	vec3 n_out4p0;
	float n_out4p1;
	{
		vec4 _tex_read = textureLod(TEXTURE, scrn_uv.xy, 0.0);
		n_out4p0 = _tex_read.rgb;
		n_out4p1 = _tex_read.a;
	}

// ColorFunc:6
	vec3 n_out6p0;
	{
		vec3 c = n_out4p0;
		float max1 = max(c.r, c.g);
		float max2 = max(max1, c.b);
		float max3 = max(max1, max2);
		n_out6p0 = vec3(max3, max3, max3);
	}

// VectorOp:8
	vec3 n_in8p1 = vec3(float(colors.length()-1));
	vec3 n_out8p0 = n_out6p0 * n_in8p1;

// VectorFunc:7
	vec3 n_out7p0 = round(n_out8p0);

// VectorOp:9
	vec3 n_in9p1 = vec3(float(colors.length()-1));
	vec3 n_out9p0 = n_out7p0 / n_in9p1;
	vec4 out_color = colors[int(round(n_out8p0.x))];
	

// Output:0
	COLOR = out_color;
	COLOR.a = n_out4p1;
	
	//COLOR.rgb = n_out9p0;

}

void light() {
// Output:0

}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/color0 = Color( 0, 0, 0, 1 )
shader_param/color1 = Color( 0, 0, 0, 1 )
shader_param/color2 = Color( 0, 0, 0, 1 )
shader_param/color3 = Color( 0, 0, 0, 1 )
shader_param/color4 = Color( 0, 0, 0, 1 )
shader_param/color5 = Color( 0, 0, 0, 1 )
shader_param/color6 = Color( 0, 0, 0, 1 )
shader_param/color7 = Color( 0, 0, 0, 1 )
shader_param/color8 = Color( 0, 0, 0, 1 )

[node name="Node2D" type="Node2D"]

[node name="Camera2D" type="Camera2D" parent="."]
current = true
zoom = Vector2( 0.5, 0.5 )

[node name="for_shader" type="Node2D" parent="."]
material = SubResource( 2 )

[node name="BackBufferCopy2" type="BackBufferCopy" parent="for_shader"]
position = Vector2( -1.0625, 0.5625 )
copy_mode = 2
rect = Rect2( -32, -32, 64, 64 )

[node name="Polygon2D" type="Polygon2D" parent="for_shader/BackBufferCopy2"]
material = ExtResource( 1 )
position = Vector2( -10, 7 )
polygon = PoolVector2Array( -3, -2, 2, -2, 3.28738, 18.0188, -3.38594, 16.03 )

[node name="BackBufferCopy" type="BackBufferCopy" parent="for_shader"]
position = Vector2( -2, 12 )
rect = Rect2( -8, -8, 16, 16 )

[node name="Polygon2D2" type="Polygon2D" parent="for_shader/BackBufferCopy"]
material = ExtResource( 1 )
position = Vector2( 2.73221, 1.01963 )
polygon = PoolVector2Array( -2, -3, -2.21019, -2.44226, -2.38737, -0.847674, -2.74172, -1.02485, -2.52517, -2.58007, -2, -4, -1.44243, -4.07622, -1.63929, -5.00148, -1.30462, -5.6905, -0.162823, -5.86767, 0.112785, -5.00148, 0, -4, 0.388394, -3.97779, 0.742747, -2.46195, 0.860866, -1.02485, 0.526198, -1.00517, 0.329335, -2.22571, 0, -3, -0.182508, -1.47764, -0.0212708, 1.79287, 0.205292, 1.97256, 0, 2, -0.280938, 2.00683, -0.359684, 0.943775, -0.792782, -0.119283, -1.16682, -0.0799103, -1.69835, 0.825658, -1.6619, 1.83975, -1.4744, 2.00381, -1.73772, 2.02652, -2, 2, -1.79678, -1.43826 )

[node name="BackBufferCopy3" type="BackBufferCopy" parent="for_shader"]
position = Vector2( -20, 21 )
copy_mode = 2
rect = Rect2( -32, -32, 64, 64 )
__meta__ = {
"_edit_lock_": true
}

[node name="Polygon2D3" type="Polygon2D" parent="for_shader/BackBufferCopy3"]
material = ExtResource( 1 )
position = Vector2( -3, -4 )
polygon = PoolVector2Array( -3, -2, 69, -2, 69, 2, -3, 2 )

[node name="Icon" type="Polygon2D" parent="for_shader"]
position = Vector2( 4, 0.999999 )
scale = Vector2( 0.53125, 0.4375 )
z_index = -1
polygon = PoolVector2Array( -80.9412, -50.2857, 65.8824, -59.4286, 97.8824, 59.4286, -71.5294, 64 )
__meta__ = {
"_edit_lock_": true
}
